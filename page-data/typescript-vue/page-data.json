{"componentChunkName":"component---src-templates-blog-post-js","path":"/typescript-vue/","result":{"data":{"site":{"id":"Site","siteMetadata":{"title":"我的博客"}},"markdownRemark":{"id":"07d50189-d6df-52c4-ba76-166ecf6eea1f","excerpt":"typescript的两个核心,面向对象和强类型 typescript目前主要应用的方向\nweb：angular,react,vue?\n游戏：白鹭引擎,LayaAir引擎 typescript用于vue开发是否合适 有点鸡肋，但… 原因1：由于vue本身用自己的一套格式为.vue…","html":"<h2>typescript的两个核心,面向对象和强类型</h2>\n<p>typescript目前主要应用的方向\nweb：angular,react,vue?\n游戏：白鹭引擎,LayaAir引擎</p>\n<h2>typescript用于vue开发是否合适</h2>\n<p>有点鸡肋，但…</p>\n<p>原因1：由于vue本身用自己的一套格式为.vue文件做了一个面向对象的封装，因此，typescript的面向对象特性并没有发挥其优势，仅仅是改变了一个形态。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"></code></pre></div>\n<p>原因2：由于强类型的引入，代码量上升了。同时在引用一些“不靠谱”的第三方的js库时，你还得为它们补充申明文件。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"></code></pre></div>\n<h2>ts在vue中开发的优点</h2>\n<p>typescript的强类型引用，使得变量类型的使用变得更加严谨。并且IDE工具可以更好进行代码提示。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"></code></pre></div>","frontmatter":{"title":"浅谈typescript用于vue开发的优点和坑","date":"October 26, 2019","description":null}}},"pageContext":{"slug":"/typescript-vue/","previous":{"fields":{"slug":"/swift-closure/"},"frontmatter":{"title":"一个前端学习IOS开发采坑记-swift的闭包"}},"next":null}}}