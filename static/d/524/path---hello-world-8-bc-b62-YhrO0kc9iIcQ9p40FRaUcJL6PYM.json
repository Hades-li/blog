{"data":{"site":{"siteMetadata":{"title":"我的博客","author":"ignis"}},"markdownRemark":{"id":"810bc937-6ecf-58e4-b197-d699c2542a47","excerpt":"前言 这是用来记录我一个前端如何学习ios开发的经历，更多的是从一个前端的角度来理解ios开发。和一些框架思想的转变。 语言的选择 大多数人都很清楚，oc是ios开发的第一大语言。即便swift已经到了第4版。在目前的项目中，\n依然是oc…","html":"<h2>前言</h2>\n<p>这是用来记录我一个前端如何学习ios开发的经历，更多的是从一个前端的角度来理解ios开发。和一些框架思想的转变。</p>\n<h2>语言的选择</h2>\n<p>大多数人都很清楚，oc是ios开发的第一大语言。即便swift已经到了第4版。在目前的项目中，\n依然是oc为主力语言。其优点是非常完善的第三方框架库。\n网上能找到各种各样的问题解决方案的样例都是基于oc的。这对于开发一个项目帮助非常大。\n但如果那你用了swift，你会发现很多问题，你不得不去看人家是用oc怎么解决的，然后自己仿造用swift来实现。\n自然开发效率就下降了。</p>\n<p>但是作为一个前端开发者，当你第一眼看到oc的语法时，你一定是懵逼的。当然，就连从事多年oc开发的\n人来说，也是觉得oc的语法很变态。这也就是苹果为什么会创建swift语言的原因了。\n作为前端来说，选择swift来作为开发ios语言，其学习难度要比oc小很多。因为它和js有很多相似的地方。\n比如实例化一个对象：</p>\n<p>oc的</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">A *a = [A init]\nNSString *str = [NSString stringWithFormat:@&quot;字符串%d&quot;,a]</code></pre></div>\n<p>swift的:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">var a = A()\nvar str:String = &quot;hello world&quot;</code></pre></div>\n<p>如果你是一个前端开发者，当你第一次看见oc的语法，估计可能会认为那在实例化一个数组。oc的特色就是各种”中挂号”。</p>","frontmatter":{"title":"一个前端学习IOS开发采坑记-1","date":"December 09, 2015"}}},"pageContext":{"slug":"/hello-world/","previous":null,"next":{"fields":{"slug":"/cv/"},"frontmatter":{"title":"个人简历"}}}}